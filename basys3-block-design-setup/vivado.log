#-----------------------------------------------------------
# Vivado v2024.2 (64-bit)
# SW Build 5239630 on Fri Nov 08 22:34:34 MST 2024
# IP Build 5239520 on Sun Nov 10 16:12:51 MST 2024
# SharedData Build 5239561 on Fri Nov 08 14:39:27 MST 2024
# Start of session at: Fri Oct 24 21:58:42 2025
# Process ID         : 5540
# Current directory  : /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup
# Command line       : vivado
# Log file           : /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/vivado.log
# Journal file       : /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/vivado.jou
# Running On         : dipen-ubuntu-mate
# Platform           : Ubuntu
# Operating System   : Ubuntu 24.04.2 LTS
# Processor Detail   : 13th Gen Intel(R) Core(TM) i7-13700
# CPU Frequency      : 4480.475 MHz
# CPU Physical cores : 16
# CPU Logical cores  : 24
# Host memory        : 33394 MB
# Swap memory        : 8589 MB
# Total Virtual      : 41984 MB
# Available Virtual  : 39673 MB
#-----------------------------------------------------------
start_gui
source /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/windows_build.tcl
# set script_path [file normalize [info script]]
# set origin_dir [file dirname $script_path]
# cd $origin_dir
# puts "INFO: Set origin_dir to $origin_dir"
INFO: Set origin_dir to /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup
# proc checkRequiredFiles { origin_dir} {
#   set status true
# 
# 
#   set paths [list \
#  "[file normalize "$origin_dir/neorv32_vivado_ip_work/packaged_ip"]"]"\
#   ]
#   foreach ipath $paths {
#     if { ![file isdirectory $ipath] } {
#       puts " Could not access $ipath "
#       set status false
#     }
#   }
# 
#   return $status
# }
# set origin_dir "."
# if { [info exists ::origin_dir_loc] } {
#   set origin_dir $::origin_dir_loc
# }
# set _xil_proj_name_ "EjaaskelTutorial"
# if { [info exists ::user_project_name] } {
#   set _xil_proj_name_ $::user_project_name
# }
# variable script_file
# set script_file "build.tcl"
# proc print_help {} {
#   variable script_file
#   puts "\nDescription:"
#   puts "Recreate a Vivado project from this script. The created project will be"
#   puts "functionally equivalent to the original project for which this script was"
#   puts "generated. The script contains commands for creating a project, filesets,"
#   puts "runs, adding/importing sources and setting properties on various objects.\n"
#   puts "Syntax:"
#   puts "$script_file"
#   puts "$script_file -tclargs \[--origin_dir <path>\]"
#   puts "$script_file -tclargs \[--project_name <name>\]"
#   puts "$script_file -tclargs \[--help\]\n"
#   puts "Usage:"
#   puts "Name                   Description"
#   puts "-------------------------------------------------------------------------"
#   puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
#   puts "                       origin_dir path value is \".\", otherwise, the value"
#   puts "                       that was set with the \"-paths_relative_to\" switch"
#   puts "                       when this script was generated.\n"
#   puts "\[--project_name <name>\] Create project with the specified name. Default"
#   puts "                       name is the name of the project from where this"
#   puts "                       script was generated.\n"
#   puts "\[--help\]               Print help information for this script"
#   puts "-------------------------------------------------------------------------\n"
#   exit 0
# }
# if { $::argc > 0 } {
#   for {set i 0} {$i < $::argc} {incr i} {
#     set option [string trim [lindex $::argv $i]]
#     switch -regexp -- $option {
#       "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
#       "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
#       "--help"         { print_help }
#       default {
#         if { [regexp {^-} $option] } {
#           puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
#           return 1
#         }
#       }
#     }
#   }
# }
# set validate_required 0
# if { $validate_required } {
#   if { [checkRequiredFiles $origin_dir] } {
#     puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
#   } else {
#     puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
#     return
#   }
# }
# if { ![info exists ::user_project_name] } { set ::user_project_name "neorv32_project" }
# create_project $::user_project_name $origin_dir/$::user_project_name -part xc7a35tcpg236-1
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2024.2/data/ip'.
# set proj_dir [get_property directory [current_project]]
# set obj [current_project]
# set_property -name "board_part_repo_paths" -value "[file normalize "$origin_dir/../../../.Xilinx/Vivado/2024.2/xhub/board_store/xilinx_board_store"]" -objects $obj
WARNING: [Vivado 12-9135] Ignoring repo path (/home/dipen/Downloads/.Xilinx/Vivado/2024.2/xhub/board_store/xilinx_board_store) because it contains no board files
# set_property -name "board_part" -value "digilentinc.com:basys3:part0:1.2" -objects $obj
# set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
# set_property -name "enable_resource_estimation" -value "0" -objects $obj
# set_property -name "enable_vhdl_2008" -value "1" -objects $obj
# set_property -name "ip_cache_permissions" -value "read write" -objects $obj
# set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
# set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
# set_property -name "platform.board_id" -value "basys3" -objects $obj
# set_property -name "revised_directory_structure" -value "1" -objects $obj
# set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
# set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
# set_property -name "simulator_language" -value "Mixed" -objects $obj
# set_property -name "sim_compile_state" -value "1" -objects $obj
# set_property -name "target_language" -value "VHDL" -objects $obj
# set_property -name "use_inline_hdl_ip" -value "1" -objects $obj
# set_property -name "xpm_libraries" -value "XPM_CDC" -objects $obj
# if {[string equal [get_filesets -quiet sources_1] ""]} {
#   create_fileset -srcset sources_1
# }
# set obj [get_filesets sources_1]
# if { $obj != {} } {
# set_property ip_repo_paths [file normalize "${origin_dir}/neorv32_vivado_ip_work/packaged_ip"] $obj
# 
# update_ip_catalog -rebuild
# }
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_vivado_ip_work/packaged_ip'.
# set obj [get_filesets sources_1]
# set obj [get_filesets sources_1]
# set_property -name "dataflow_viewer_settings" -value "min_width=16" -objects $obj
# set_property -name "top" -value "design_1_wrapper" -objects $obj
# if {[string equal [get_filesets -quiet constrs_1] ""]} {
#   create_fileset -constrset constrs_1
# }
# set obj [get_filesets constrs_1]
# set file "[file normalize "$origin_dir/src/constrs_1/new/Constraints.xdc"]"
# set file_added [add_files -norecurse -fileset $obj [list $file]]
# set file "new/Constraints.xdc"
# set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
# set_property -name "file_type" -value "XDC" -objects $file_obj
# set obj [get_filesets constrs_1]
# if {[string equal [get_filesets -quiet sim_1] ""]} {
#   create_fileset -simset sim_1
# }
# set obj [get_filesets sim_1]
# set obj [get_filesets sim_1]
# set_property -name "sim_wrapper_top" -value "1" -objects $obj
# set_property -name "top" -value "design_1_wrapper" -objects $obj
# set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
# set obj [get_filesets utils_1]
# set obj [get_filesets utils_1]
# set idrFlowPropertiesConstraints ""
# catch {
#  set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
#  set_param runs.disableIDRFlowPropertyConstraints 1
# }
# if {[string equal [get_runs -quiet synth_1] ""]} {
#     create_run -name synth_1 -part xc7a35tcpg236-1 -flow {Vivado Synthesis 2024} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
# } else {
#   set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
#   set_property flow "Vivado Synthesis 2024" [get_runs synth_1]
# }
# set obj [get_runs synth_1]
# set_property set_report_strategy_name 1 $obj
# set_property report_strategy {Vivado Synthesis Default Reports} $obj
# set_property set_report_strategy_name 0 $obj
# if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
#   create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
# }
# set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
# if { $obj != "" } {
# 
# }
# if {[string equal [get_runs -quiet impl_1] ""]} {
#     create_run -name impl_1 -part xc7a35tcpg236-1 -flow {Vivado Implementation 2024} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
# } else {
#   set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
#   set_property flow "Vivado Implementation 2024" [get_runs impl_1]
# }
# set obj [get_runs impl_1]
# set_property set_report_strategy_name 1 $obj
# set_property report_strategy {Vivado Implementation Default Reports} $obj
# set_property set_report_strategy_name 0 $obj
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "options.max_paths" -value "10" -objects $obj
# set_property -name "options.report_unconstrained" -value "1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
#   create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "options.max_paths" -value "10" -objects $obj
# set_property -name "options.report_unconstrained" -value "1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "options.max_paths" -value "10" -objects $obj
# set_property -name "options.report_unconstrained" -value "1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
# if { $obj != "" } {
# set_property -name "options.verbose" -value "1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
#   create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "options.max_paths" -value "10" -objects $obj
# set_property -name "options.report_unconstrained" -value "1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "options.max_paths" -value "10" -objects $obj
# set_property -name "options.report_unconstrained" -value "1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "options.max_paths" -value "10" -objects $obj
# set_property -name "options.report_unconstrained" -value "1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "options.max_paths" -value "10" -objects $obj
# set_property -name "options.report_unconstrained" -value "1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
# if { $obj != "" } {
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
# if { $obj != "" } {
# set_property -name "options.warn_on_violation" -value "1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "options.max_paths" -value "10" -objects $obj
# set_property -name "options.report_unconstrained" -value "1" -objects $obj
# set_property -name "options.warn_on_violation" -value "1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
#   create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
# if { $obj != "" } {
# set_property -name "options.warn_on_violation" -value "1" -objects $obj
# 
# }
# set obj [get_runs impl_1]
# set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
# set_property -name "steps.write_bitstream.args.bin_file" -value "1" -objects $obj
# set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
# set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj
# current_run -implementation [get_runs impl_1]
# catch {
#  if { $idrFlowPropertiesConstraints != {} } {
#    set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
#  }
# }
# puts "INFO: Project created:${_xil_proj_name_}"
INFO: Project created:EjaaskelTutorial
# if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
# create_dashboard_gadget -name {drc_1} -type drc
# }
# set obj [get_dashboard_gadgets [ list "drc_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj
# if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
# create_dashboard_gadget -name {methodology_1} -type methodology
# }
# set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj
# if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
# create_dashboard_gadget -name {power_1} -type power
# }
# set obj [get_dashboard_gadgets [ list "power_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj
# if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
# create_dashboard_gadget -name {timing_1} -type timing
# }
# set obj [get_dashboard_gadgets [ list "timing_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj
# if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
# create_dashboard_gadget -name {utilization_1} -type utilization
# }
# set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
# set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
# set_property -name "run.step" -value "synth_design" -objects $obj
# set_property -name "run.type" -value "synthesis" -objects $obj
# if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
# create_dashboard_gadget -name {utilization_2} -type utilization
# }
# set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
# set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj
# move_dashboard_gadget -name {utilization_1} -row 0 -col 0
# move_dashboard_gadget -name {power_1} -row 1 -col 0
# move_dashboard_gadget -name {drc_1} -row 2 -col 0
# move_dashboard_gadget -name {timing_1} -row 0 -col 1
# move_dashboard_gadget -name {utilization_2} -row 1 -col 1
# move_dashboard_gadget -name {methodology_1} -row 2 -col 1
# puts "INFO: Creating block design container..."
INFO: Creating block design container...
# create_bd_design design_1
Wrote  : </home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.srcs/sources_1/bd/design_1/design_1.bd> 
# puts "INFO: Sourcing block design TCL..."
INFO: Sourcing block design TCL...
# source [file normalize "${origin_dir}/src/bd/design_1.tcl"]
## namespace eval _tcl {
## proc get_script_folder {} {
##    set script_path [file normalize [info script]]
##    set script_folder [file dirname $script_path]
##    return $script_folder
## }
## }
## variable script_folder
## set script_folder [_tcl::get_script_folder]
## set scripts_vivado_version 2024.2
## set current_vivado_version [version -short]
## if { [string first $scripts_vivado_version $current_vivado_version] == -1 } {
##    puts ""
##    if { [string compare $scripts_vivado_version $current_vivado_version] > 0 } {
##       catch {common::send_gid_msg -ssname BD::TCL -id 2042 -severity "ERROR" " This script was generated using Vivado <$scripts_vivado_version> and is being run in <$current_vivado_version> of Vivado. Sourcing the script failed since it was created with a future version of Vivado."}
## 
##    } else {
##      catch {common::send_gid_msg -ssname BD::TCL -id 2041 -severity "ERROR" "This script was generated using Vivado <$scripts_vivado_version> and is being run in <$current_vivado_version> of Vivado. Please run the script in Vivado <$scripts_vivado_version> then open the design in Vivado <$current_vivado_version>. Upgrade the design by running \"Tools => Report => Report IP Status...\", then run write_bd_tcl to create an updated script."}
## 
##    }
## 
##    return 1
## }
## set list_projs [get_projects -quiet]
## if { $list_projs eq "" } {
##    create_project project_1 myproj -part xc7a35tcpg236-1
##    set_property BOARD_PART digilentinc.com:basys3:part0:1.2 [current_project]
## }
## variable design_name
## set design_name design_1
## set errMsg ""
## set nRet 0
## set cur_design [current_bd_design -quiet]
## set list_cells [get_bd_cells -quiet]
## if { ${design_name} eq "" } {
##    # USE CASES:
##    #    1) Design_name not set
## 
##    set errMsg "Please set the variable <design_name> to a non-empty value."
##    set nRet 1
## 
## } elseif { ${cur_design} ne "" && ${list_cells} eq "" } {
##    # USE CASES:
##    #    2): Current design opened AND is empty AND names same.
##    #    3): Current design opened AND is empty AND names diff; design_name NOT in project.
##    #    4): Current design opened AND is empty AND names diff; design_name exists in project.
## 
##    if { $cur_design ne $design_name } {
##       common::send_gid_msg -ssname BD::TCL -id 2001 -severity "INFO" "Changing value of <design_name> from <$design_name> to <$cur_design> since current design is empty."
##       set design_name [get_property NAME $cur_design]
##    }
##    common::send_gid_msg -ssname BD::TCL -id 2002 -severity "INFO" "Constructing design in IPI design <$cur_design>..."
## 
## } elseif { ${cur_design} ne "" && $list_cells ne "" && $cur_design eq $design_name } {
##    # USE CASES:
##    #    5) Current design opened AND has components AND same names.
## 
##    set errMsg "Design <$design_name> already exists in your project, please set the variable <design_name> to another value."
##    set nRet 1
## } elseif { [get_files -quiet ${design_name}.bd] ne "" } {
##    # USE CASES: 
##    #    6) Current opened design, has components, but diff names, design_name exists in project.
##    #    7) No opened design, design_name exists in project.
## 
##    set errMsg "Design <$design_name> already exists in your project, please set the variable <design_name> to another value."
##    set nRet 2
## 
## } else {
##    # USE CASES:
##    #    8) No opened design, design_name not in project.
##    #    9) Current opened design, has components, but diff names, design_name not in project.
## 
##    common::send_gid_msg -ssname BD::TCL -id 2003 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."
## 
##    create_bd_design $design_name
## 
##    common::send_gid_msg -ssname BD::TCL -id 2004 -severity "INFO" "Making design <$design_name> as current_bd_design."
##    current_bd_design $design_name
## 
## }
INFO: [BD::TCL 103-2002] Constructing design in IPI design <design_1>...
## common::send_gid_msg -ssname BD::TCL -id 2005 -severity "INFO" "Currently the variable <design_name> is equal to \"$design_name\"."
INFO: [BD::TCL 103-2005] Currently the variable <design_name> is equal to "design_1".
## if { $nRet != 0 } {
##    catch {common::send_gid_msg -ssname BD::TCL -id 2006 -severity "ERROR" $errMsg}
##    return $nRet
## }
## set bCheckIPsPassed 1
## set bCheckIPs 1
## if { $bCheckIPs == 1 } {
##    set list_check_ips "\ 
## NEORV32:user:neorv32_vivado_ip:1.0\
## xilinx.com:ip:clk_wiz:6.0\
## "
## 
##    set list_ips_missing ""
##    common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."
## 
##    foreach ip_vlnv $list_check_ips {
##       set ip_obj [get_ipdefs -all $ip_vlnv]
##       if { $ip_obj eq "" } {
##          lappend list_ips_missing $ip_vlnv
##       }
##    }
## 
##    if { $list_ips_missing ne "" } {
##       catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
##       set bCheckIPsPassed 0
##    }
## 
## }
INFO: [BD::TCL 103-2011] Checking if the following IPs exist in the project's IP catalog:  
NEORV32:user:neorv32_vivado_ip:1.0 xilinx.com:ip:clk_wiz:6.0  .
## if { $bCheckIPsPassed != 1 } {
##   common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
##   return 3
## }
## proc create_root_design { parentCell } {
## 
##   variable script_folder
##   variable design_name
## 
##   if { $parentCell eq "" } {
##      set parentCell [get_bd_cells /]
##   }
## 
##   # Get object for parentCell
##   set parentObj [get_bd_cells $parentCell]
##   if { $parentObj == "" } {
##      catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
##      return
##   }
## 
##   # Make sure parentObj is hier blk
##   set parentType [get_property TYPE $parentObj]
##   if { $parentType ne "hier" } {
##      catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
##      return
##   }
## 
##   # Save current instance; Restore later
##   set oldCurInst [current_bd_instance .]
## 
##   # Set parent object as current
##   current_bd_instance $parentObj
## 
## 
##   # Create interface ports
## 
##   # Create ports
##   set uart0_rxd_i [ create_bd_port -dir I uart0_rxd_i ]
##   set gpio_o [ create_bd_port -dir O -from 7 -to 0 gpio_o ]
##   set uart0_txd_o [ create_bd_port -dir O uart0_txd_o ]
##   set rstn_i [ create_bd_port -dir I -type rst rstn_i ]
##   set_property -dict [ list \
##    CONFIG.POLARITY {ACTIVE_HIGH} \
##  ] $rstn_i
##   set clk_i [ create_bd_port -dir I -type clk -freq_hz 100000000 clk_i ]
## 
##   # Create instance: neorv32_vivado_ip_0, and set properties
##   set neorv32_vivado_ip_0 [ create_bd_cell -type ip -vlnv NEORV32:user:neorv32_vivado_ip:1.0 neorv32_vivado_ip_0 ]
##   set_property -dict [list \
##     CONFIG.DMEM_EN {true} \
##     CONFIG.IMEM_EN {true} \
##     CONFIG.IMEM_SIZE {32768} \
##     CONFIG.IO_CLINT_EN {true} \
##     CONFIG.IO_DMA_EN {true} \
##     CONFIG.IO_GPIO_EN {true} \
##     CONFIG.IO_GPIO_OUT_NUM {8} \
##     CONFIG.IO_UART0_EN {true} \
##     CONFIG.RISCV_ISA_M {true} \
##     CONFIG.RISCV_ISA_Zicntr {true} \
##     CONFIG.XBUS_EN {true} \
##   ] $neorv32_vivado_ip_0
## 
## 
##   # Create instance: clk_wiz_0, and set properties
##   set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
##   set_property -dict [list \
##     CONFIG.RESET_PORT {reset} \
##     CONFIG.RESET_TYPE {ACTIVE_HIGH} \
##   ] $clk_wiz_0
## 
## 
##   # Create port connections
##   connect_bd_net -net clk_i_1  [get_bd_ports clk_i] \
##   [get_bd_pins clk_wiz_0/clk_in1]
##   connect_bd_net -net clk_wiz_0_clk_out1  [get_bd_pins clk_wiz_0/clk_out1] \
##   [get_bd_pins neorv32_vivado_ip_0/clk]
##   connect_bd_net -net clk_wiz_0_locked  [get_bd_pins clk_wiz_0/locked] \
##   [get_bd_pins neorv32_vivado_ip_0/resetn]
##   connect_bd_net -net neorv32_vivado_ip_0_gpio_o  [get_bd_pins neorv32_vivado_ip_0/gpio_o] \
##   [get_bd_ports gpio_o]
##   connect_bd_net -net neorv32_vivado_ip_0_uart0_txd_o  [get_bd_pins neorv32_vivado_ip_0/uart0_txd_o] \
##   [get_bd_ports uart0_txd_o]
##   connect_bd_net -net rstn_i_1  [get_bd_ports rstn_i] \
##   [get_bd_pins clk_wiz_0/reset]
##   connect_bd_net -net uart0_rxd_i_1  [get_bd_ports uart0_rxd_i] \
##   [get_bd_pins neorv32_vivado_ip_0/uart0_rxd_i]
## 
##   # Create address segments
## 
## 
##   # Restore current instance
##   current_bd_instance $oldCurInst
## 
##   validate_bd_design
##   save_bd_design
## }
## create_root_design ""
INFO: [Device 21-403] Loading part xc7a35tcpg236-1
WARNING: [BD 41-2670] Found an incomplete address path from address space '/neorv32_vivado_ip_0/m_axi' to master interface '/neorv32_vivado_ip_0/m_axi'. Please either complete or remove this path to resolve.
INFO: [xilinx.com:ip:clk_wiz:6.0-1] /clk_wiz_0 clk_wiz propagate
Wrote  : </home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.srcs/sources_1/bd/design_1/design_1.bd> 
Wrote  : </home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.srcs/sources_1/bd/design_1/ui/bd_1f5defd0.ui> 
# puts "INFO: Validating block design..."
INFO: Validating block design...
# regenerate_bd_layout
# validate_bd_design
INFO: [BD 5-320] Validate design is not run, since the design is already validated.
# puts "INFO: Saving block design..."
INFO: Saving block design...
# save_bd_design
Wrote  : </home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.srcs/sources_1/bd/design_1/ui/bd_1f5defd0.ui> 
# puts "INFO: Generating HDL wrapper..."
INFO: Generating HDL wrapper...
# set design_name [get_bd_designs]
# make_wrapper -files [get_files ${design_name}.bd] -top -import
INFO: [BD 41-1662] The design 'design_1.bd' is already validated. Therefore parameter propagation will not be re-run.
VHDL Output written to : /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.gen/sources_1/bd/design_1/synth/design_1.vhd
VHDL Output written to : /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.gen/sources_1/bd/design_1/sim/design_1.vhd
VHDL Output written to : /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.gen/sources_1/bd/design_1/hdl/design_1_wrapper.vhd
# puts "INFO: Generating output products..."
INFO: Generating output products...
# generate_target all [get_files ${design_name}.bd]
INFO: [BD 41-1662] The design 'design_1.bd' is already validated. Therefore parameter propagation will not be re-run.
VHDL Output written to : /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.gen/sources_1/bd/design_1/synth/design_1.vhd
VHDL Output written to : /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.gen/sources_1/bd/design_1/sim/design_1.vhd
VHDL Output written to : /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.gen/sources_1/bd/design_1/hdl/design_1_wrapper.vhd
INFO: [BD 41-1029] Generation completed for the IP Integrator block neorv32_vivado_ip_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block clk_wiz_0 .
Exporting to file /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.gen/sources_1/bd/design_1/hw_handoff/design_1.hwh
Generated Hardware Definition File /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.gen/sources_1/bd/design_1/synth/design_1.hwdef
# puts "SUCCESS: Block design created with all IP cells!"
SUCCESS: Block design created with all IP cells!
update_compile_order -fileset sources_1
launch_runs impl_1 -to_step write_bitstream -jobs 24
INFO: [IP_Flow 19-6930] IPCACHE: runCacheChecks() number of threads = 8
INFO: [IP_Flow 19-6921] IPCACHE: Adding cache check func to thread queue for IP design_1_clk_wiz_0_0
INFO: [IP_Flow 19-6921] IPCACHE: Adding cache check func to thread queue for IP design_1_neorv32_vivado_ip_0_0
INFO: [IP_Flow 19-8020] IPCACHE: runCacheChecks() calling threadPool finishWork()
INFO: [IP_Flow 19-6924] IPCACHE: Running cache check for IP inst: design_1_clk_wiz_0_0
INFO: [IP_Flow 19-6924] IPCACHE: Running cache check for IP inst: design_1_neorv32_vivado_ip_0_0
[Fri Oct 24 22:00:07 2025] Launched design_1_clk_wiz_0_0_synth_1, design_1_neorv32_vivado_ip_0_0_synth_1, synth_1...
Run output will be captured here:
design_1_clk_wiz_0_0_synth_1: /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.runs/design_1_clk_wiz_0_0_synth_1/runme.log
design_1_neorv32_vivado_ip_0_0_synth_1: /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.runs/design_1_neorv32_vivado_ip_0_0_synth_1/runme.log
synth_1: /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.runs/synth_1/runme.log
[Fri Oct 24 22:00:07 2025] Launched impl_1...
Run output will be captured here: /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.runs/impl_1/runme.log
open_hw_manager
connect_hw_server -allow_non_jtag
INFO: [Labtools 27-2285] Connecting to hw_server url TCP:localhost:3121
INFO: [Labtools 27-2222] Launching hw_server...
INFO: [Labtools 27-2221] Launch Output:

****** Xilinx hw_server v2024.2
  **** Build date : Oct 29 2024 at 10:16:47
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.


INFO: [Labtools 27-3415] Connecting to cs_server url TCP:localhost:0
INFO: [Labtools 27-3417] Launching cs_server...
INFO: [Labtools 27-2221] Launch Output:


******** Xilinx cs_server v2024.2.0
  ****** Build date   : Oct 30 2024-23:49:07
    **** Build number : 2024.2.1730312347
      ** Copyright 2017-2022 Xilinx, Inc. All Rights Reserved.
      ** Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.



open_hw_target
INFO: [Labtoolstcl 44-466] Opening hw_target localhost:3121/xilinx_tcf/Digilent/210183BB798CA
set_property PROGRAM.FILE {/home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.runs/impl_1/design_1_wrapper.bit} [get_hw_devices xc7a35t_0]
current_hw_device [get_hw_devices xc7a35t_0]
refresh_hw_device -update_hw_probes false [lindex [get_hw_devices xc7a35t_0] 0]
INFO: [Labtools 27-1434] Device xc7a35t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it.
set_property PROBES.FILE {} [get_hw_devices xc7a35t_0]
set_property FULL_PROBES.FILE {} [get_hw_devices xc7a35t_0]
set_property PROGRAM.FILE {/home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.runs/impl_1/design_1_wrapper.bit} [get_hw_devices xc7a35t_0]
program_hw_devices [get_hw_devices xc7a35t_0]
INFO: [Labtools 27-3164] End of startup status: HIGH
refresh_hw_device [lindex [get_hw_devices xc7a35t_0] 0]
INFO: [Labtools 27-1434] Device xc7a35t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it.
set_property PROBES.FILE {} [get_hw_devices xc7a35t_0]
set_property FULL_PROBES.FILE {} [get_hw_devices xc7a35t_0]
set_property PROGRAM.FILE {/home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_project/neorv32_project.runs/impl_1/design_1_wrapper.bit} [get_hw_devices xc7a35t_0]
program_hw_devices [get_hw_devices xc7a35t_0]
INFO: [Labtools 27-3164] End of startup status: HIGH
refresh_hw_device [lindex [get_hw_devices xc7a35t_0] 0]
INFO: [Labtools 27-1434] Device xc7a35t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it.
ERROR: [Labtoolstcl 44-513] HW Target shutdown. Closing target: localhost:3121/xilinx_tcf/Digilent/210183BB798CA
source /home/dipen/Downloads/neorv32-7349c409eea4e129d5d11b6ecbcfaea76c470709/rtl/system_integration/neorv32_vivado_ip.tcl
# set neorv32_home ../..
# set ip_top neorv32_vivado_ip
# set ip_logo docs/figures/neorv32_logo_riscv_small.png
# set outputdir neorv32_vivado_ip_work
# set cur_dir [file normalize .]
# file mkdir $outputdir
# set files [glob -nocomplain "$outputdir/*"]
# if {[llength $files] != 0} {
#   puts "DELETING ALL FILES in $outputdir"
#   file delete -force {*}[glob -directory $outputdir *];
# }
DELETING ALL FILES in neorv32_vivado_ip_work
# create_project "neorv32-ip" $outputdir
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2024.2/data/ip'.
# set_property INCREMENTAL false [get_filesets sim_1]
couldn't open "../../rtl/file_list_soc.f": no such file or directory
    while executing
"open "$neorv32_home/rtl/file_list_soc.f" r"
    invoked from within
"read [open "$neorv32_home/rtl/file_list_soc.f" r]"
    invoked from within
"set file_list_file [read [open "$neorv32_home/rtl/file_list_soc.f" r]]"
    (file "/home/dipen/Downloads/neorv32-7349c409eea4e129d5d11b6ecbcfaea76c470709/rtl/system_integration/neorv32_vivado_ip.tcl" line 48)
WARNING: [IP_Flow 19-4318] IP-XACT file does not exist: /home/dipen/Downloads/neorv32-setups-main/vivado/basys3-block-design-setup/neorv32_vivado_ip_work/packaged_ip/component.xml. It will be created.
current_project neorv32_project
close_project
exit
INFO: [Common 17-206] Exiting Vivado at Fri Oct 24 22:34:42 2025...
